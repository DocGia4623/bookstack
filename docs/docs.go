// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Logs in a user and returns access \u0026 refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logs out a user by invalidating their token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generates a new access token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book": {
            "get": {
                "description": "Retrieve all books available in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book request body",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BookCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/chapter/{chapterId}/page": {
            "get": {
                "description": "Retrieve all pages within a chapter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Get pages of a chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chapter ID",
                        "name": "chapterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new page inside a given chapter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Add a page to a chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chapter ID",
                        "name": "chapterId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Page request body",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/chapter/{chapterId}/page/{pageId}": {
            "put": {
                "description": "Update a page by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Update a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "pageId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Page request body",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a page by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page"
                ],
                "summary": "Delete a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "pageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/complete": {
            "post": {
                "description": "Create a fully detailed book with associated chapters and pages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create a complete book with chapters and pages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Complete book request body",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CompleteBookCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/shelve": {
            "get": {
                "description": "Retrieve all shelves available in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shelve"
                ],
                "summary": "Get all shelves",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new shelve for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shelve"
                ],
                "summary": "Create a new shelve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Shelve request body",
                        "name": "shelve",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ShelveCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/shelve/{shelveId}": {
            "delete": {
                "description": "Delete a shelve by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shelve"
                ],
                "summary": "Delete a shelve",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shelve ID",
                        "name": "shelveId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/{bookId}": {
            "put": {
                "description": "Update a book by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Update a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book request body",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BookCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/{bookId}/chapter": {
            "get": {
                "description": "Retrieve all chapters associated with a book",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapter"
                ],
                "summary": "Get all chapters of a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new chapter to an existing book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapter"
                ],
                "summary": "Create a chapter for a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "bookId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chapter request body",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BookChapterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/book/{bookId}/chapter/{chapterId}": {
            "put": {
                "description": "Update a chapter by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapter"
                ],
                "summary": "Update a chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chapter ID",
                        "name": "chapterId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chapter request body",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BookChapterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a chapter by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chapter"
                ],
                "summary": "Delete a chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chapter ID",
                        "name": "chapterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/order": {
            "get": {
                "description": "Get oders by userId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get oroders by userId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an order based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order request payload",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/order/{orderId}/cancel": {
            "post": {
                "description": "Cancel an order by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Cancel an order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Retrieve a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of users",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Service error",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user details based on the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update user",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        },
        "/user/{userId}": {
            "delete": {
                "description": "Xóa người dùng dựa trên ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Xóa người dùng",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID của người dùng cần xóa",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Xóa người dùng thành công",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Không lấy được userId hợp lệ",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    },
                    "500": {
                        "description": "Lỗi server",
                        "schema": {
                            "$ref": "#/definitions/response.WebResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.BookChapterRequest": {
            "type": "object",
            "properties": {
                "order": {
                    "description": "Thứ tự sắp xếp chương",
                    "type": "integer"
                },
                "title": {
                    "description": "Tiêu đề chương",
                    "type": "string"
                }
            }
        },
        "request.BookCreateRequest": {
            "type": "object",
            "required": [
                "shelve_id",
                "title"
            ],
            "properties": {
                "created_by": {
                    "description": "ID của người tạo sách",
                    "type": "integer"
                },
                "description": {
                    "description": "Mô tả của sách",
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "restricted": {
                    "description": "Trạng thái kiểm soát quyền truy cập",
                    "type": "boolean"
                },
                "shelve_id": {
                    "description": "ID của kệ sách chứa nó (bắt buộc)",
                    "type": "integer"
                },
                "slug": {
                    "description": "Đường dẫn thân thiện",
                    "type": "string"
                },
                "tags": {
                    "description": "Danh sách tag",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TagRequest"
                    }
                },
                "title": {
                    "description": "Tiêu đề của sách (bắt buộc)",
                    "type": "string"
                }
            }
        },
        "request.CompleteBookCreateRequest": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/request.BookCreateRequest"
                },
                "chapters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.BookChapterRequest"
                    }
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.PageRequest"
                    }
                }
            }
        },
        "request.OrderDetailRequest": {
            "type": "object",
            "required": [
                "book_id",
                "quantity"
            ],
            "properties": {
                "book_id": {
                    "description": "ID của sách",
                    "type": "integer"
                },
                "quantity": {
                    "description": "Số lượng sách đặt",
                    "type": "integer"
                }
            }
        },
        "request.OrderRequest": {
            "type": "object",
            "required": [
                "order_details",
                "user_id"
            ],
            "properties": {
                "address": {
                    "description": "Địa chỉ giao hàng",
                    "type": "string"
                },
                "order_details": {
                    "description": "Danh sách sách trong đơn",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.OrderDetailRequest"
                    }
                },
                "phone": {
                    "description": "Số điện thoại",
                    "type": "string"
                },
                "user_id": {
                    "description": "Người đặt hàng",
                    "type": "integer"
                }
            }
        },
        "request.PageRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "chapter_id": {
                    "type": "integer"
                },
                "content": {
                    "description": "Nội dung trang (markdown, HTML,...)",
                    "type": "string"
                },
                "order": {
                    "description": "Thứ tự sắp xếp trang",
                    "type": "integer"
                },
                "slug": {
                    "description": "Đường dẫn thân thiện (có thể tự động tạo nếu rỗng)",
                    "type": "string"
                },
                "title": {
                    "description": "Tiêu đề trang (bắt buộc)",
                    "type": "string"
                }
            }
        },
        "request.ShelveCreateRequest": {
            "type": "object",
            "required": [
                "created_by",
                "name"
            ],
            "properties": {
                "created_by": {
                    "description": "ID người tạo kệ (bắt buộc)",
                    "type": "integer"
                },
                "description": {
                    "description": "Mô tả kệ",
                    "type": "string"
                },
                "name": {
                    "description": "Tên kệ (bắt buộc)",
                    "type": "string"
                },
                "order": {
                    "description": "Thứ tự hiển thị của kệ",
                    "type": "integer"
                },
                "tags": {
                    "description": "Danh sách tag (chỉ lấy tên tag)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.TagRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "request.UserCreateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UserLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "response.WebResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "BookStack API",
	Description:      "This is a book ordering API built with Golang and Gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
