// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"bookstack/config"
	"bookstack/internal/controller"
	"bookstack/internal/repository"
	"bookstack/internal/service"
	"github.com/google/wire"
)

// Injectors from injector.go:

// InitializeUserService khởi tạo UserService tự động
func InitializeApp() (*App, error) {
	configConfig, err := config.LoadConfig()
	if err != nil {
		return nil, err
	}
	db := config.ConnectDB(configConfig)
	userRepository := repository.NewUserRepositoryImpl(db)
	authService := service.NewAuthServiceImpl(userRepository, configConfig)
	authenticationController := controller.NewAuthenticationController(authService)
	userService := service.NewUserServiceImpl(userRepository)
	userController := controller.NewUserController(userService)
	app := &App{
		AuthenticationController: authenticationController,
		UserController:           userController,
	}
	return app, nil
}

// injector.go:

var AppSet = wire.NewSet(config.LoadConfig, config.ConnectDB, RepositorySet,
	ServiceSet,
	ControllerSet, wire.Struct(new(App), "*"),
)

type App struct {
	AuthenticationController *controller.AuthenticationController
	UserController           *controller.UserController
}
